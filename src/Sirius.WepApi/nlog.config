<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="info"
      internalLogFile="c:\temp\internal-nlog.txt">

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <!-- the targets to write to -->
  <!--<targets>
    -->
  <!-- write logs to file  -->
  <!--
    <target xsi:type="File" name="allfile" fileName="c:\temp\nlog-all-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

    -->
  <!-- another file log, only own logs. Uses some ASP.NET core renderers -->
  <!--
    <target xsi:type="File" name="ownFile-web" fileName="c:\temp\nlog-own-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />
  </targets>-->

  <variable name="logDirectory"  value="${basedir}/logs/${shortdate}" />
  <targets async="true"> 
    
    <target xsi:type="Null" name="blackHole" />
    
    <target name="Trace"
            xsi:type="File"
            layout="${longdate} ${threadid:padding=4} ${level:uppercase=true:padding=5} ${logger} ${newline}${message}${exception:format=tostring}"
            fileName="${logDirectory}/log.txt"
            archiveFileName="${logDirectory}/log.{#}.txt"
            archiveEvery="Day"
            archiveNumbering="Rolling"
            maxArchiveFiles="7"
            concurrentWrites="true"
            createDirs="true"
            autoFlush="true" />
    
    <target name="Exception"
             xsi:type="File"
             layout="${longdate} ${threadid:padding=4} ${level:uppercase=true:padding=5} ${logger} ${newline} ${message}${newline}${exception:format=tostring}"
             fileName="${logDirectory}/exc.txt"
             archiveFileName="${logDirectory}/exc.{#}.txt"
             archiveEvery="Day"
             archiveNumbering="Rolling"
             maxArchiveFiles="7"
             concurrentWrites="true"
             createDirs="true"
             autoFlush="true" /> 
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->
    <!--<logger name="*" minlevel="Trace" writeTo="allfile" />-->

    <!--Skip non-critical Microsoft logs and so log only own logs--> 
    <!--<logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />-->
    <!-- BlackHole without writeTo -->
    <!--<logger name="*" minlevel="Trace" writeTo="ownFile-web" />-->

    <logger name="*"   maxlevel="Warn" writeTo="Trace"  >
      <filters>
        <!--<when condition="equals(logger, 'Microsoft.AspNetCore.Hosting.Internal.WebHost')" action="ignore" />-->
        <when condition="starts-with(logger, 'Microsoft')" action="Ignore" />
      </filters>
    </logger>
    
    
    <logger name="*" minlevel="Error" writeTo="Exception" />
  </rules>
</nlog>